!function(){"use strict";var _,Backbone,exports;if("undefined"==typeof window?(_=require("underscore"),Backbone=require("backbone"),exports=Backbone,"undefined"!=typeof module&&(module.exports=exports)):(_=window._,Backbone=window.Backbone,exports=window),!Backbone)throw"Include backbone.js before backbone.computed.js";var constructor=Backbone.Model,Model=function(attributes,options){if(this.computedFields||options&&options.computedFields){var computedFields={};this.computedFields&&_.extend(computedFields,"function"==typeof this.computedFields?this.computedFields():this.computedFields),options&&options.computedFields&&_.extend(computedFields,"function"==typeof options.computedFields?options.computedFields():options.computedFields),this.computedFields=computedFields,this.computedAttrs=_.keys(this.computedFields),this.deps={},_.each(this.computedFields,this._findDepencies,this),_.each(this.deps,this._bindDepencies,this)}constructor.apply(this,arguments)};Model.prototype=Backbone.Model.prototype,_.each(_.functions(Backbone.Model),function(functionName){Model[functionName]=Backbone.Model[functionName]}),Backbone.Model=Model,Backbone.Model.prototype._findDepencies=function(data,attr){for(var i=0;i<data.fields.length;i++)this.deps[data.fields[i]]||(this.deps[data.fields[i]]=[]),this.deps[data.fields[i]].push(attr)},Backbone.Model.prototype._bindDepencies=function(computedFields,dependency){for(var i=0;i<computedFields.length;i++)this.on("change:"+dependency,_.bind(this._computeField,this,computedFields[i]))},Backbone.Model.prototype._computeField=function(computedField){var result=this.computedFields[computedField].converter.apply(this);this.set(computedField,result,{isComputed:!0})};var set=Backbone.Model.prototype.set;Backbone.Model.prototype.set=function(key,val,options){var attrs;return null==key?this:("object"==typeof key?(attrs=key,options=val):(attrs={})[key]=val,options=options||{},options.isComputed!==!0&&_.each(attrs,function(val,key){if(_.contains(this.computedAttrs,key))throw new Error("Cannot set a computed field ("+key+") without the isComputed option.")},this),set.apply(this,arguments),void 0)};var toJSON=Backbone.Model.prototype.toJSON;Backbone.Model.prototype.toJSON=function(){var json=toJSON.apply(this,arguments);return _.each(this.computedFields,function(data,field){data.includeInJSON||delete json[field]},this),json}}();
//# sourceMappingURL=dist/backbone.computed.map